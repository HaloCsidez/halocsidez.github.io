<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://halocsidez.github.io</id>
    <title>Gridea</title>
    <updated>2021-12-17T05:11:49.969Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://halocsidez.github.io"/>
    <link rel="self" href="https://halocsidez.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://halocsidez.github.io/images/avatar.png</logo>
    <icon>https://halocsidez.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[粗略介绍RNN->LSTM->Transformer]]></title>
        <id>https://halocsidez.github.io/post/cu-lue-jie-shao-rnn-greaterlstm-greatertransformer/</id>
        <link href="https://halocsidez.github.io/post/cu-lue-jie-shao-rnn-greaterlstm-greatertransformer/">
        </link>
        <updated>2021-12-17T05:10:45.000Z</updated>
        <content type="html"><![CDATA[<p>神经网络主要包含两大类型</p>
<ul>
<li>卷积神经网络CNN（又称为前馈神经网络）</li>
<li>循环神经网络RNN，RNN衍生出以下等类型神经网络
<ul>
<li>长短期记忆LSTM</li>
<li>门控循环单元GRU</li>
</ul>
</li>
</ul>
<p>尽管神经网络主要用于监督学习，但也有一些为无监督学习设计的变体</p>
<ul>
<li>自动编码器（AutoEncoder）</li>
<li>生成对抗网络（GAN）</li>
</ul>
<h2 id="rnn循环神经网络">RNN(循环神经网络)</h2>
<p>RNN中当前的hidden-unit由前一个hidden-unit的输出和输入序列label所共同决定<br>
<img src='https://pic4.zhimg.com/80/v2-3884f344d71e92d70ec3c44d2795141f_720w.jpg' width='40%'></p>
<p>如果把上面有W的那个带箭头的圈去掉，它就变成了最普通的全连接神经网络。x是一个向量，它表示输入层的值（这里面没有画出来表示神经元节点的圆圈）；s是一个向量，它表示隐藏层的值（这里隐藏层面画了一个节点，你也可以想象这一层其实是多个节点，节点数与向量s的维度相同）；</p>
<p>U是输入层到隐藏层的权重矩阵，o也是一个向量，它表示输出层的值；V是隐藏层到输出层的权重矩阵。</p>
<p>循环神经网络的隐藏层的值s不仅仅取决于当前这次的输入x，还取决于上一次隐藏层的值s。权重矩阵 W就是隐藏层上一次的值作为这一次的输入的权重。</p>
<img src='https://pic2.zhimg.com/80/v2-b0175ebd3419f9a11a3d0d8b00e28675_720w.jpg' width='80%'>
<p>使用公式表示为：<br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>O</mi><mi>t</mi></msub><mo>=</mo><mi>g</mi><mo>(</mo><mi>V</mi><mo>×</mo><msub><mi>S</mi><mi>t</mi></msub><mo>)</mo></mrow><annotation encoding="application/x-tex">
O_t = g(V \times S_t)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>S</mi><mi>t</mi></msub><mo>=</mo><mi>f</mi><mo>(</mo><mi>U</mi><mo>×</mo><msub><mi>X</mi><mi>t</mi></msub><mo>+</mo><mi>W</mi><mo>×</mo><msub><mi>S</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>)</mo></mrow><annotation encoding="application/x-tex">
S_t = f(U \times X_t + W \times S_{t-1})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p>
<p>设计思想就是认为序列中前面的每一个单元都会对其后面的预测产生影响，因此在生成下一个序列时要把全部的序列都考虑进去，然后不断循环。但是我们可以很容易的看出其问题在于“全部”，在数学层面上思考，由于训练的参数间会存在极大的相关性，因此其反向传播会有梯度消失的可能。而就主观地来说，一个句子里的任意一部分也都不会和这个句子的所有部分有关系，由此就有了LSTM模型。</p>
<h2 id="lstm">LSTM</h2>
<p>LSTM主要为了解决长序列训练过程中梯度消失和爆炸的问题，LSTM提出了三种门的结构：</p>
<ul>
<li>$f: forget gate，将c(t-1)相对应的不重要的信息删去; $</li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi><mo>:</mo><mi>i</mi><mi>n</mi><mi>p</mi><mi>u</mi><mi>t</mi><mi>g</mi><mi>a</mi><mi>t</mi><mi>e</mi><mo separator="true">,</mo><mi mathvariant="normal">选</mi><mi mathvariant="normal">择</mi><mi mathvariant="normal">有</mi><mi mathvariant="normal">用</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">信</mi><mi mathvariant="normal">息</mi><mo separator="true">;</mo></mrow><annotation encoding="application/x-tex">i: input gate, 选择有用的信息;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">p</span><span class="mord mathdefault">u</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">选</span><span class="mord cjk_fallback">择</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">息</span><span class="mpunct">;</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>o</mi><mo>:</mo><mi>o</mi><mi>u</mi><mi>t</mi><mi>p</mi><mi>u</mi><mi>t</mi><mi>g</mi><mi>a</mi><mi>t</mi><mi>e</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">决</mi><mi mathvariant="normal">定</mi><mi mathvariant="normal">哪</mi><mi mathvariant="normal">些</mi><mi mathvariant="normal">能</mi><mi mathvariant="normal">作</mi><mi mathvariant="normal">为</mi><mi mathvariant="normal">当</mi><mi mathvariant="normal">前</mi><mi mathvariant="normal">状</mi><mi mathvariant="normal">态</mi><mi mathvariant="normal">输</mi><mi mathvariant="normal">出</mi></mrow><annotation encoding="application/x-tex">o: output gate，决定哪些能作为当前状态输出</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">o</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">o</span><span class="mord mathdefault">u</span><span class="mord mathdefault">t</span><span class="mord mathdefault">p</span><span class="mord mathdefault">u</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">决</span><span class="mord cjk_fallback">定</span><span class="mord cjk_fallback">哪</span><span class="mord cjk_fallback">些</span><span class="mord cjk_fallback">能</span><span class="mord cjk_fallback">作</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">当</span><span class="mord cjk_fallback">前</span><span class="mord cjk_fallback">状</span><span class="mord cjk_fallback">态</span><span class="mord cjk_fallback">输</span><span class="mord cjk_fallback">出</span></span></span></span></li>
</ul>
<img src='https://pic3.zhimg.com/80/v2-17181d3087308ad439448015eab7de3e_1440w.jpg'>
其中每一个单元用以下形式表示:
<img src='https://pic4.zhimg.com/80/v2-c9481436b0eca3fbfb1704dcc3d860d7_1440w.jpg' width='80%'>
<p>补充：其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span>可以表示为</p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi><mo>=</mo><mi>t</mi><mi>a</mi><mi>n</mi><mi>h</mi><mo>(</mo><msup><mi>w</mi><mi>c</mi></msup><mo>×</mo><mo>[</mo><msup><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msup><mo separator="true">,</mo><msup><mi>x</mi><mi>t</mi></msup><mo>]</mo><mo>+</mo><msup><mi>b</mi><mi>c</mi></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">z=tanh(w^c \times [h^{t-1}, x^t] + b^c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">c</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mi>f</mi></msup><mo>=</mo><mi>σ</mi><mo>(</mo><msup><mi>w</mi><mi>f</mi></msup><mo>[</mo><msup><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msup><mo separator="true">,</mo><msup><mi>x</mi><mi>t</mi></msup><mo>]</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">z^f = \sigma(w^f[h^{t-1}, x^t])</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0991079999999998em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span><span class="mclose">]</span><span class="mclose">)</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mi>i</mi></msup><mo>=</mo><mi>σ</mi><mo>(</mo><msup><mi>w</mi><mi>i</mi></msup><mo>[</mo><msup><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msup><mo separator="true">,</mo><msup><mi>x</mi><mi>t</mi></msup><mo>]</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">z^i = \sigma(w^i[h^{t-1}, x^t])</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0746639999999998em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span><span class="mclose">]</span><span class="mclose">)</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>z</mi><mi>o</mi></msup><mo>=</mo><mi>σ</mi><mo>(</mo><msup><mi>w</mi><mi>o</mi></msup><mo>[</mo><msup><mi>h</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msup><mo separator="true">,</mo><msup><mi>x</mi><mi>t</mi></msup><mo>]</mo><mo>)</mo></mrow><annotation encoding="application/x-tex">z^o = \sigma(w^o[h^{t-1}, x^t])</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">o</span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span><span class="mclose">]</span><span class="mclose">)</span></span></span></span></p>
<p>通过不断地训练会对w参数进行修正以达到最好的拟合效果，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">y_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为每个单元的输出</p>
<h2 id="seq2seq">Seq2Seq</h2>
<p>一种映射可变长序列至另一个可变长序列的RNN网络结构，Encoder-Decoder框架是机器翻译（Machine Translation）模型的产物</p>
<p>Seq2Seq是典型的encoder-decoder结构，其基本思想就是通过两个RNN网络，一个作为encoder，另一个作为decoder。上面指的RNN结构其实是一种广义上的RNN结构，包括其各种各样的变体。encoder通过把输入序列转换成指定长的向量，decoder通过把encoder输出的向量映射成想要转换的目标序列。<br>
<img src='https://pic1.zhimg.com/80/v2-057f266dbfa98cd795b20f722661a78c_720w.jpg'></p>
<p>故通过该框架我们可以使用来自一种模态数据的编码器输出作为用于另一模态的解码器输入，以实现将一种模态转换到另一种模态的系统。正因为这个强大的功能，Encoder_Decoder框架以应用于机器翻译，图像生成标题等众多任务中。</p>
<h2 id="transformer">Transformer</h2>
<p>Transformer整体是一个encoder-decoder模型，完全基于Attention机制。整体结构如下</p>
<img src='https://upload-images.jianshu.io/upload_images/20030902-925e9c82bea8e475.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp' width='60%'>
<p>模型左边是encoder，右边是decoder，在input的一开始先把离散的序列通过Embedding全部联系起来。图中的Q(query)，K(key)和V(Value)都分别由input序列于权重矩阵相乘获得，三者的值均不相同，但维度是一致的。由于要计算注意力得分因此图中的K，V和Q的顺序是固定的。经过词嵌入处理的KVQ会进入到Multi-Head Attention中：<br>
<img src='https://pic4.zhimg.com/80/v2-c913297c3a7602e5d679f61b0113cb5b_1440w.jpg'></p>
<p>具体流程：</p>
<ol>
<li>先输入每个单词的词向量x，x由单词的Embedding和位置的Embedding相加得到(完整的句子用向量矩阵X表示，x=n*d，n为句子单词个数，d为向量维度);</li>
<li>计算Q，K，V。通过<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>×</mo><msub><mi>W</mi><mi>q</mi></msub><mo>=</mo><mi>Q</mi><mo separator="true">;</mo><mi>X</mi><mo>×</mo><msub><mi>W</mi><mi>k</mi></msub><mo>=</mo><mi>K</mi><mo separator="true">;</mo><mi>X</mi><mo>×</mo><msub><mi>W</mi><mi>v</mi></msub><mo>=</mo><mi>V</mi></mrow><annotation encoding="application/x-tex">X \times W_q = Q; X \times W_k = K; X \times W_v = V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">Q</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span>计算得到;</li>
<li>将Q,K,V输入到Multi-Head Attention中<br>
<img src='https://pic4.zhimg.com/80/v2-1a315e701e30f5540cd64bb6bcda209f_1440w.jpg' width=70%></li>
</ol>
<ul>
<li>
<p>公式理解</p>
<ul>
<li>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">d_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是Q，K矩阵的列数，即向量维度</li>
<li>除以<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">d_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的平方根防止内积过大</li>
<li>Q（n行<em>x列，n表示单词的个数）乘以K（与Q尺寸一样）的转置得到的为n</em>n的矩阵，得到的结果可以表示为各个单词之间的attention强度</li>
<li>对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Q</mi><msup><mi>K</mi><mi>t</mi></msup></mrow><annotation encoding="application/x-tex">QK^t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9879959999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">Q</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span></span></span>的每一行进行SoftMax，即每一行之和变为1</li>
</ul>
<p>最终多层注意力机制得到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">Z_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>进行连接，然后线性变换最终得到Z</p>
</li>
</ul>
<ol start="4">
<li>
<p>将X与MultiHeadAttention(X)进行相加（指残差连接），然后将结果归一化</p>
</li>
<li>
<p>经过Nx次上述操作</p>
</li>
<li>
<p>Decoder中第一个第一个 Multi-Head Attention 采用了 Masked 操作<br>
<img src='https://upload-images.jianshu.io/upload_images/20030902-e0b011e0403db3e8.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp' width=50%></p>
<ul>
<li>相较于Multi-Head Attention，在计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Q</mi><msup><mi>K</mi><mi>t</mi></msup></mrow><annotation encoding="application/x-tex">QK^t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9879959999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">Q</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span></span></span></span></span></span></span>之后与Mask点成后，再进行softMax</li>
</ul>
</li>
<li>
<p>Decoder block 最后的部分是利用 Softmax 预测下一个单词，在之前的网络层可以得到一个最终的输出 Z，因为 Mask 的存在，使得单词 0 的输出 Z0 只包含单词 0 的信息，如下<br>
<img src='https://upload-images.jianshu.io/upload_images/20030902-1b52fb369c7a367f.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp' width=60%></p>
</li>
</ol>
<p>Softmax 根据输出矩阵的每一行预测下一个单词<br>
<img src='https://upload-images.jianshu.io/upload_images/20030902-24f3d181b815173e.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp' width=60%></p>
<h2 id="参考">参考</h2>
<p><a href="https://juejin.cn/post/6844903508446019592">[译] RNN 循环神经网络系列 3：编码、解码器</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/50915723">从RNN、LSTM到Encoder-Decoder框架、注意力机制、Transformer</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/346191907">深度详解RNN，LSTM，Seq2Seq，Attention机制和Transformer</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/346427014">Attention机制在CV中的应用<br>
</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/30844905">一文搞懂RNN（循环神经网络）基础篇</a></p>
<p>(!!详细)<a href="https://www.jianshu.com/p/9b87b945151e"><strong>Transformer 模型详解</strong></a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ORACLE数据库定时备份脚本]]></title>
        <id>https://halocsidez.github.io/post/oracle-shu-ju-ku-ding-shi-bei-fen-jiao-ben/</id>
        <link href="https://halocsidez.github.io/post/oracle-shu-ju-ku-ding-shi-bei-fen-jiao-ben/">
        </link>
        <updated>2021-12-14T06:00:41.000Z</updated>
        <content type="html"><![CDATA[<h2 id="数据库自动备份说明">数据库自动备份说明</h2>
<p>备份周期：每天凌晨2:00开始自动备份<br>
备份文件保留天数：7天，自动删除7天前的备份文件。</p>
<h2 id="实施步骤">实施步骤</h2>
<ol>
<li>创建数据库备份目录：</li>
</ol>
<pre><code class="language-shell">su – oracle
cd $ORACLE_HOME
mkdir databak
</code></pre>
<ol start="2">
<li>上传数据库备份脚本：<br>
<code>cd $ORACLE_HOME</code>把附件中的autobakup.sh文件上传到此目录中,并赋予执行权限<code>chmod 755 autobakup.sh</code></li>
<li>把自动备份脚本加入到定时任务中：</li>
</ol>
<pre><code class="language-shell">su – oracle
crontab –e
</code></pre>
<p>在后面添加 <code>0 2 * * * $ORACLE_HOME/autobakup.sh &gt;backuplog.txt 2&gt;&amp;1</code> 保存退出即可。</p>
<h2 id="数据库还原">数据库还原</h2>
<ol>
<li>解压数据库压缩件：</li>
</ol>
<pre><code class="language-shell">tar –zxvf 数据库备份文件.tar.gz
</code></pre>
<ol start="2">
<li>数据导入：</li>
</ol>
<pre><code class="language-sql">su – oracle
imp u3cuser/u3cuser123 file=数据库备份文件.dmp log=u3cuser.log fromuser=u3cuser
imp hzmetro_yw/hzmetro_yw file=数据库备份文件.dmp  log=hzmetro_yw.log fromuser=hzmetro_yw
imp hzmetro_zh/hzmetro_zh file=数据库备份文件.dmp log=hzmetro_zh.log fromuser=hzmetro_zh
</code></pre>
<h2 id="实现代码">实现代码</h2>
<p><strong>#autobackup.sh</strong></p>
<pre><code class="language-shell">#!/bin/bash
#自动备份数据库脚本，删除7天前的数据文件
#export ORACLE_BASE=/u01/app/oracle
#export ORACLE_HOME=$ORACLE_BASE/product/11.2.0/db_1
#export PATH=$ORACLE_HOME/bin:$PATH:$HOME/bin
#oracle字符集
#export NLS_LANG=AMERICAN_AMERICA.ZHS16GBK

#source /home/oracle/.bash_profile


#备份目录
BAKDIR=$ORACLE_HOME/databak


#进入备份目录
cd $BAKDIR

#开始备份
echo 'oracle backup...'
#获取当前时间，格式：201701010000
DATE=$(date +%Y%m%d%H%M)
BAKDATA1=u3cuser-$DATE.dmp
BAKLOG1=u3cuser-$DATE.log
BAKDATA2=hzmetroyw-$DATE.dmp
BAKLOG2=hzmetroyw-$DATE.log
BAKDATA3=hzmetrozh-$DATE.dmp
BAKLOG3=hzmetrozh-$DATE.log
BAKDATA=databack-$DATE.tar.gz

exp u3cuser/u3cuser123 file=$BAKDIR/$BAKDATA1  log=$BAKDIR/$BAKLOG1  owner=u3cuser
exp hzmetro_yw/hzmetro_yw file=$BAKDIR/$BAKDATA2  log=$BAKDIR/$BAKLOG2  owner=hzmetro_yw
exp hzmetro_zh/hzmetro_zh file=$BAKDIR/$BAKDATA3  log=$BAKDIR/$BAKLOG3  owner=hzmetro_zh
echo 'oracle backup successfully.'

#压缩数据库文件
#cd $BAKDIR
tar -zcf $BAKDATA $BAKDATA1 $BAKDATA2 $BAKDATA3
rm -rf $BAKDATA1 $BAKDATA2 $BAKDATA3

#删除7天前的历史备份
echo 'remove history ...'
find $BAKDIR/ -type f -name &quot;*.tar.gz&quot; -mtime +7 -exec rm -f {} \;
find $BAKDIR/ -type f -name &quot;*.log&quot; -mtime +7 -exec rm -f {} \;
echo 'remove history successfully.'

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ubuntu安装]]></title>
        <id>https://halocsidez.github.io/post/ubuntu-an-zhuang/</id>
        <link href="https://halocsidez.github.io/post/ubuntu-an-zhuang/">
        </link>
        <updated>2021-12-14T05:52:07.000Z</updated>
        <content type="html"><![CDATA[<h2 id="相关信息描述">相关信息描述</h2>
<ul>
<li>联想R9000p 3060版本</li>
<li>网卡IntelA210</li>
<li>Ubuntu20版本</li>
</ul>
<h2 id="系统问题">系统问题</h2>
<h3 id="盒盖不休眠">盒盖不休眠</h3>
<pre><code>sudo vim /etc/systemd/logind.conf
#HandleLidSwitch=suspend
HandleLidSwitch=ignore
sudo systemctl restart systemd-logind
</code></pre>
<h3 id="网卡无法显示">网卡无法显示</h3>
<p>sudo mv /usr/lib/firmware/iwlwifi-ty-a0-gf-a0.pnvm  /usr/lib/firmware/iwlwifi-ty-a0-gf-a0.bak</p>
<h3 id="亮度调节">亮度调节</h3>
<p>sudo gedit /etc/default/grub</p>
<p>GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet nvidia.NVreg_RegistryDwords=EnableBrightnessControl=1&quot;</p>
<p>sudo update-grub</p>
<h3 id="休眠问题">休眠问题</h3>
<p>Then edit <code>/etc/default/grub</code> and add the line: <code>GRUB_CMDLINE_LINUX=&quot;nouveau.blacklist=1&quot;</code></p>
<h3 id="卸载安装文件">卸载安装文件</h3>
<p>1.sudo apt-get remove 软件名</p>
<p>卸载删除软件，但是配置文件什么的都还在</p>
<p>2.sudo apt-get --purge remove 软件名</p>
<p>删除软件、及其配置文件，但是原来安装该软件的依赖包都还在</p>
<ol start="3">
<li>软件名</li>
</ol>
<p>删除软件及其配置文件、相关依赖包等，属于比较干净的卸载。</p>
<p>dpkg -l | grep postgresql*</p>
<h3 id="桌面缩放调整">桌面缩放调整</h3>
<pre><code class="language-shell">cd /usr/share/glib-2.0/schemas/

sudo gedit org.gnome.desktop.interface.gschema.xml
# text-scaling-factor 修改default为1.25

sudo gedit com.ubuntu.user-interface.gschema.xml
# text-scaling-factor 1.25

# 编译schema，重启生效
sudo glib-compile-schemas /usr/share/glib-2.0/schemas/
</code></pre>
<h2 id="软件问题">软件问题</h2>
<h3 id="网易云字体调整">网易云字体调整</h3>
<p>网易云字体太小<br>
sudo vim /opt/netease/netease-cloud-music/netease-cloud-music.bash<br>
将最后一行改为<br>
exec &quot;${HERE}&quot;/netease-cloud-music -force-device-scale-factor=2 $@</p>
<h3 id="snap和apt">snap和apt</h3>
<p>snap是新的包管理工具，能够直接安装和更新。</p>
<p>snap help</p>
<h3 id="conda安装">conda安装</h3>
<p>从官网下载conda</p>
<p>目录安装在/usr/local/anaconda3/下面，最后在当前用户目录下的~/.bashrc中添加环境变量，参考root目录下的环境变量</p>
<h3 id="删除dock中的图标">删除dock中的图标</h3>
<p>It seems that you can't remove apps from the Dash, however you can manage your launchers (*.desktop files) in one of the following directories:</p>
<ul>
<li><code>/usr/share/applications</code></li>
<li><code>/usr/local/share/applications</code></li>
<li><code>~/.local/share/applications</code></li>
</ul>
<p>If your launcher file is in any of the first two directories, you will require root permissions to remove it.</p>
<h2 id="vscode">VSCode</h2>
<p>python 调试</p>
<ol>
<li>首先，需要Python的依赖包<strong>debugpy</strong>，在工作环境下下载该包：</li>
</ol>
<pre><code>pip install debugpy
</code></pre>
<ol start="2">
<li>修改launch.json</li>
</ol>
<pre><code>{
	&quot;version&quot;: &quot;0.2.0&quot;,
	&quot;configurations&quot;: [
		{
			&quot;name&quot;: &quot;Python: Attach&quot;,
			&quot;type&quot;: &quot;python&quot;,
			&quot;request&quot;: &quot;attach&quot;,
			&quot;connect&quot;: {
				&quot;host&quot;: &quot;localhost&quot;,
				&quot;port&quot;: xxxx
			}
		}
	]
}
</code></pre>
<ol start="3">
<li>运行以下命令</li>
</ol>
<pre><code>python -m debugpy --listen xxxx --wait-for-client xxx.py -arg1 ARG1 -arg2 ARG2
</code></pre>
<p>注意，这里的命令使用了debugpy包，且设置了一个必要的参数--listen，这里监听的端口xxxx由用户指定，和launch.json中设置的端口号一致。</p>
<p>键入命令后正常执行，接下来在程序中想要查看之处设置好断点，按F5键，进入普通的debug流程即可。之后的步骤与不带参数的程序调试一致。</p>
]]></content>
    </entry>
</feed>